# -*- coding: utf-8 -*-
"""
Created on Tue Dec 14 15:50:39 2021

@author: Ha Jun Hyeok keita268@gmail.com
"""

#%% OPO에 사용되는 keydict - preset_OPO
def OPO() :
    keydict = {
    # 초기 설정. ch_type은 꼭 확인하는게 좋습니다.
    
    # TimeStamp, Battery등 다양한 채널을 raw클래스가 가지고 있는데, 
    # 이를 빼고 여기서 지정한 채널들만 지정한이름으로 데려가줍니다.
    # 이게 level6라는 ch_type을 가지고 있어야만 실행됩니다.

    # level6의 경우 T4, T3, T5, T6 채널이 있고, 이는 mne의 1020montage랑 다릅니다.
    # 따라서 이 keydict preference 에서 'T4':'P8', 이런식으로 수정합니다.
     
    # 다른 채널타입으로 녹음했다면, 
    # HandyEEGSupport.py에 있는 ch_check 함수를 사용해서 확인하고, 
    # ch_type을 수정하세요.
    
    'ch_type' : {                 
                 'Fp1':'Fp1',
                 'Fp2':'Fp2',
                 
                 'F7':'F7',
                 'F3':'F3',
                 'Fz':'Fz',
                 'F4':'F4',
                 'F8':'F8',
                 
                 'T7':'T7',
                 'C3':'C3',
                 'Cz':'Cz',
                 'C4':'C4',
                 'T8':'T8',
                 
                 'P7':'P7',
                 'P3':'P3',
                 'Pz':'Pz',
                 'P4':'P4',
                 'P8':'P8',
                 
                 'O1':'O1',
                 'O2':'O2',
                 },
    
    # sample frequency. 틀리면 값이 전부 달라집니다~
    'sfreq' : 128,
    
    # 채널리스트와 예시 채널 하나입니다.
    # 19채널을 사용할 경우 초기값을 강하게 추천합니다.
    # 채널이름이 다를 경우(실험설정을 바꾼 경우), 
    # ch_types에서 설명한 방법대로 리네임 해야 합니다.
    # 예시 채널은 채널리스트 중 아무거나 하면 됩니다.
    'sample_ch' : 'Fp1',
    'ch_list' : [       'Fp1','Fp2',
                 'F7','F3','Fz','F4','F8',
                 'T7','C3','Cz','C4','T8',
                 'P7','P3','Pz','P4','P8',
                         'O1','O2',],
    
    # 뇌파 전극 필터링 채널 리스트입니다.
    # 레퍼런스 채널을 지정해주고, 어떤걸 어디에서 빼줄지 결정합니다.
    # 19채널을 사용할 경우 초기값을 강하게 추천합니다.
    # 안하는 경우 'N', 하는경우 'Y'
    'ref_index' : False,
    # 'ref_index' : 'Y',
    'left_ref' : 'A1',
    'right_ref' : 'A2', 
    'left_ch_list' : [     'Fp1',
                       'F7','F3',
                       'T7','C3',
                       'P7','P3',
                            'O1'],
    'right_ch_list' : ['Fp2',
                        'F4','F8',
                        'C4','T8',
                        'P4','P8',
                        'O2'],
    
    # 절대값으로 볼지, 상대값으로 볼지 결정합니다. 
    # 'abs', 'rel'두가지 키워드만 인식합니다.
    # 다른걸 집어넣으면 아마 오류가 날겁니다.
    # 'abs_rel_type' : 'abs',
    'abs_rel_type' : 'rel',

    # topograph를 그릴때 몇열 몇행으로 그릴지, band range는 어떻게 지정할지 정합니다.
    # 주의해야할 점은, band range가 10개인데 ncols*nrows가 8이라면 에러가 납니다.
    # band는 겹쳐도 상관 없습니다. (8,12) (10,15)가 가능하다는 의미입니다.
    'ncols' : 5,
    'nrows' : 1,    
    # 4,2 -> 5,1
    'whole_range' : (1,50),
    'band_range_list' : [(1,4),(4,8),(8,12),(12,30),(30,50)],
    # 'band_range_list' : [(1,4),(4,8),(8,10),(10,12),
    #                       (12,15),(15,20),(20,30),(30,45)],


    # 'band_range_list' : [(8, 12),(12, 16)],
    # #표시할 band_range_list 입니다. 보통은 band_range_list와 같겠지만, ratio가 들어간 경우 수정 될 수 있습니다.
    # 'result_band_range_list' : [(8,12),(12,16),'ABR'],
    
    # cmap은 topograph의 color map 형태를 지정하는 곳입니다.
    # https://matplotlib.org/stable/tutorials/colors/colormaps.html
    # 여기에 있는 모든 색깔 풀을 지원합니다.
    'cmap' : 'rainbow',
     
    # 노이즈라고 인식할 수준을 정합니다. 
    # 0.000001이 1마이크로 볼트니까, 0.000500면 500마이크로 볼트입니다.
    # 0.000500수준이 적당하다고 생각합니다.
    'baseline' : 0.000500,
    
    # fft하기 위해 잘라내는 epoch(조각)의 크기를 정합니다.
    # 무 조 건 ! 2^n으로 정해야합니다. FFT의 공식에 의한 이유입니다.
    # sfreq = 300의 경우 2048을 추천합니다.
    # sfreq = 600의 경우 4096을 추천합니다.
    'epoch_sample' : 1024,
    
    # 눈깜빡임을 잡아냈다면, 전후로 얼마나 잘라낼지 정합니다. 초기값은 128입니다.
    # 대충 0.5초 정도 앞뒤로 잘라낼 생각이라면, 이정도가 적당합니다. 
    # 꼭 2^n으로 안해도 되지만... 이포크랑 비례하게 하는게 좋지 않을까? 
    # 하는 마음으로 그렇게 했습니다. 150등 도 괜찮습니다. 
    # 크면 많이 잘라내서 노이즈가 덜들어가겠지만, 이포크의 개수가 현저히 줄어들 수 있습니다.
    'waste_sample' : 64,
    
    # 이포크를 오버랩 할 퍼센트를 결정합니다. 초기값은 50%(0.5)입니다.
    # 이론에 의하면 가장 적절한 것은 66%라고 하지만,
    # 장기간의 유사한 경험을 하는 경우 오버랩을 덜 하는게 낫다고 하더군요.
    # 페이퍼를 확인한 것은 아니기에, 원하시면 수정해도 좋습니다.
    # 어차피 샘플수 단위로 반올림 하기 때문에 어떤 소수를 넣어도 괜찮습니다.
    'overlap_percentage' : 0.5,

    # CAR(Common Average Reference)필터에 사용될 몽타주입니다.
    # 임정환 박사님의 조언에 따라 라플라시안 필터로 만들었습니다.
    # 19채널을 사용할 경우 초기값을 추천합니다만,
    # 결과값이 만족스럽지 않을 경우 수정할 수 있습니다.
    'filter_montage' : {

    'Fp1' : {'Fp2': 1/3, 'F7' : 1/3, 'F3' : 1/3} ,
    'Fp2' : {'Fp1': 1/3, 'F8' : 1/3, 'F4' : 1/3} ,
    
    'F7'  : {'Fp1': 1/3, 'F3' : 1/3, 'P7' : 1/3} ,
    'F8'  : {'Fp2': 1/3, 'F4' : 1/3, 'P8' : 1/3} ,
    'F3'  : {'Fp1': 0.25, 'F7' : 0.25, 'Fz' : 0.25, 'C3' : 0.25} ,
    'F4'  : {'Fp2': 0.25, 'F8' : 0.25, 'Fz' : 0.25, 'C4' : 0.25} ,
    'Fz'  : {'Fp1': 0.125, 'Fp2': 0.125, 'F3' : 0.25, 'F4' : 0.25, 'Cz' : 0.25} ,
    
    'P7'  : {'F7': 1/3, 'C3' : 1/3, 'T7' : 1/3} ,
    'P8'  : {'F8': 1/3, 'C4' : 1/3, 'T8' : 1/3} ,
    'C3'  : {'F3': 0.25, 'P7' : 0.25, 'P3' : 0.25, 'Cz' : 0.25} ,
    'C4'  : {'F4': 0.25, 'P8' : 0.25, 'P4' : 0.25, 'Cz' : 0.25} ,
    'Cz'  : {'C3': 0.25, 'C4' : 0.25, 'Fz' : 0.25, 'Pz' : 0.25} ,
    
    'T7'  : {'P7': 1/3, 'P3' : 1/3, 'O1' : 1/3} ,
    'T8'  : {'P8': 1/3, 'P4' : 1/3, 'O2' : 1/3} ,
    'P3'  : {'T7': 0.25, 'C3' : 0.25, 'Pz' : 0.25, 'O1' : 0.25} ,
    'P4'  : {'T8': 0.25, 'C4' : 0.25, 'Pz' : 0.25, 'O2' : 0.25} ,
    'Pz'  : {'O1': 0.125, 'O2': 0.125, 'P3' : 0.25, 'P4' : 0.25, 'Cz' : 0.25} ,
    
    'O1' : {'O2': 1/3, 'P3' : 1/3, 'T7' : 1/3} ,
    'O2' : {'O1': 1/3, 'P4' : 1/3, 'T8' : 1/3} ,
    },
    
    }
    return keydict


def imui() :
    keydict = {
    # 초기 설정. ch_type은 꼭 확인하는게 좋습니다.
    
    # TimeStamp, Battery등 다양한 채널을 raw클래스가 가지고 있는데, 
    # 이를 빼고 여기서 지정한 채널들만 지정한이름으로 데려가줍니다.
    # 이게 level6라는 ch_type을 가지고 있어야만 실행됩니다.

    # level6의 경우 T4, T3, T5, T6 채널이 있고, 이는 mne의 1020montage랑 다릅니다.
    # 따라서 이 keydict preference 에서 'T4':'P8', 이런식으로 수정합니다.
     
    # 다른 채널타입으로 녹음했다면, 
    # HandyEEGSupport.py에 있는 ch_check 함수를 사용해서 확인하고, 
    # ch_type을 수정하세요.
    
    'ch_type' : {                 
                 'Fp1':'Fp1',
                 'Fp2':'Fp2',
                 
                 'F7':'F7',
                 'F3':'F3',
                 'Fz':'Fz',
                 'F4':'F4',
                 'F8':'F8',
                 
                 'T7':'T7',
                 'C3':'C3',
                 'Cz':'Cz',
                 'C4':'C4',
                 'T8':'T8',
                 
                 'P7':'P7',
                 'P3':'P3',
                 'Pz':'Pz',
                 'P4':'P4',
                 'P8':'P8',
                 
                 'O1':'O1',
                 'O2':'O2',
                 },
    
    # sample frequency. 틀리면 값이 전부 달라집니다~
    'sfreq' : 128,
    
    # 채널리스트와 예시 채널 하나입니다.
    # 19채널을 사용할 경우 초기값을 강하게 추천합니다.
    # 채널이름이 다를 경우(실험설정을 바꾼 경우), 
    # ch_types에서 설명한 방법대로 리네임 해야 합니다.
    # 예시 채널은 채널리스트 중 아무거나 하면 됩니다.
    'sample_ch' : 'Fp1',
    'ch_list' : [       'Fp1','Fp2',
                 'F7','F3','Fz','F4','F8',
                 'T7','C3','Cz','C4','T8',
                 'P7','P3','Pz','P4','P8',
                         'O1','O2',],
    
    # 뇌파 전극 필터링 채널 리스트입니다.
    # 레퍼런스 채널을 지정해주고, 어떤걸 어디에서 빼줄지 결정합니다.
    # 19채널을 사용할 경우 초기값을 강하게 추천합니다.
    # 안하는 경우 'N', 하는경우 'Y'
    'ref_index' : False,
    # 'ref_index' : 'Y',
    'left_ref' : 'A1',
    'right_ref' : 'A2', 
    'left_ch_list' : [     'Fp1',
                       'F7','F3',
                       'T7','C3',
                       'P7','P3',
                            'O1'],
    'right_ch_list' : ['Fp2',
                        'F4','F8',
                        'C4','T8',
                        'P4','P8',
                        'O2'],
    
    # 절대값으로 볼지, 상대값으로 볼지 결정합니다. 
    # 'abs', 'rel'두가지 키워드만 인식합니다.
    # 다른걸 집어넣으면 아마 오류가 날겁니다.
    # 'abs_rel_type' : 'abs',
    'abs_rel_type' : 'rel',

    # topograph를 그릴때 몇열 몇행으로 그릴지, band range는 어떻게 지정할지 정합니다.
    # 주의해야할 점은, band range가 10개인데 ncols*nrows가 8이라면 에러가 납니다.
    # band는 겹쳐도 상관 없습니다. (8,12) (10,15)가 가능하다는 의미입니다.
    'ncols' : 4,
    'nrows' : 2,    
    'whole_range' : (1,45),
    # 'band_range_list' : [(1,4),(4,8),(8,10),(10,12),
    #                      (12,15),(15,20),(20,30),(30,45)],
    'band_range_list' : [(8, 12),(12, 16)],
    # #표시할 band_range_list 입니다. 보통은 band_range_list와 같겠지만, ratio가 들어간 경우 수정 될 수 있습니다.
    # 'result_band_range_list' : [(8,12),(12,16),'ABR'],
    
    # cmap은 topograph의 color map 형태를 지정하는 곳입니다.
    # https://matplotlib.org/stable/tutorials/colors/colormaps.html
    # 여기에 있는 모든 색깔 풀을 지원합니다.
    'cmap' : 'rainbow',
     
    # 노이즈라고 인식할 수준을 정합니다. 
    # 0.000001이 1마이크로 볼트니까, 0.000500면 500마이크로 볼트입니다.
    # 0.000500수준이 적당하다고 생각합니다.
    'baseline' : 0.000500,
    
    # fft하기 위해 잘라내는 epoch(조각)의 크기를 정합니다.
    # 무 조 건 ! 2^n으로 정해야합니다. FFT의 공식에 의한 이유입니다.
    # sfreq = 300의 경우 2048을 추천합니다.
    # sfreq = 600의 경우 4096을 추천합니다.
    'epoch_sample' : 1024,
    
    # 눈깜빡임을 잡아냈다면, 전후로 얼마나 잘라낼지 정합니다. 초기값은 128입니다.
    # 대충 0.5초 정도 앞뒤로 잘라낼 생각이라면, 이정도가 적당합니다. 
    # 꼭 2^n으로 안해도 되지만... 이포크랑 비례하게 하는게 좋지 않을까? 
    # 하는 마음으로 그렇게 했습니다. 150등 도 괜찮습니다. 
    # 크면 많이 잘라내서 노이즈가 덜들어가겠지만, 이포크의 개수가 현저히 줄어들 수 있습니다.
    'waste_sample' : 64,
    
    # 이포크를 오버랩 할 퍼센트를 결정합니다. 초기값은 50%(0.5)입니다.
    # 이론에 의하면 가장 적절한 것은 66%라고 하지만,
    # 장기간의 유사한 경험을 하는 경우 오버랩을 덜 하는게 낫다고 하더군요.
    # 페이퍼를 확인한 것은 아니기에, 원하시면 수정해도 좋습니다.
    # 어차피 샘플수 단위로 반올림 하기 때문에 어떤 소수를 넣어도 괜찮습니다.
    'overlap_percentage' : 0.5,

    # CAR(Common Average Reference)필터에 사용될 몽타주입니다.
    # 임정환 박사님의 조언에 따라 라플라시안 필터로 만들었습니다.
    # 19채널을 사용할 경우 초기값을 추천합니다만,
    # 결과값이 만족스럽지 않을 경우 수정할 수 있습니다.
    'filter_montage' : {

    'Fp1' : {'Fp2': 1/3, 'F7' : 1/3, 'F3' : 1/3} ,
    'Fp2' : {'Fp1': 1/3, 'F8' : 1/3, 'F4' : 1/3} ,
    
    'F7'  : {'Fp1': 1/3, 'F3' : 1/3, 'T7' : 1/3} ,
    'F8'  : {'Fp2': 1/3, 'F4' : 1/3, 'T8' : 1/3} ,
    'F3'  : {'Fp1': 0.25, 'F7' : 0.25, 'Fz' : 0.25, 'C3' : 0.25} ,
    'F4'  : {'Fp2': 0.25, 'F8' : 0.25, 'Fz' : 0.25, 'C4' : 0.25} ,
    'Fz'  : {'Fp1': 0.2, 'Fp2': 0.2, 'F3' : 0.2, 'F4' : 0.2, 'Cz' : 0.2} ,
    
    'T7'  : {'F7': 1/3, 'C3' : 1/3, 'P7' : 1/3} ,
    'T8'  : {'F8': 1/3, 'C4' : 1/3, 'P8' : 1/3} ,
    'C3'  : {'F3': 0.25, 'P7' : 0.25, 'P3' : 0.25, 'Cz' : 0.25} ,
    'C4'  : {'F4': 0.25, 'P8' : 0.25, 'P4' : 0.25, 'Cz' : 0.25} ,
    'Cz'  : {'C3': 0.25, 'C4' : 0.25, 'Fz' : 0.25, 'Pz' : 0.25} ,
    
    'P7'  : {'T7': 1/3, 'P3' : 1/3, 'O1' : 1/3} ,
    'P8'  : {'T8': 1/3, 'P4' : 1/3, 'O2' : 1/3} ,
    'P3'  : {'P7': 0.25, 'C3' : 0.25, 'Pz' : 0.25, 'O1' : 0.25} ,
    'P4'  : {'P8': 0.25, 'C4' : 0.25, 'Pz' : 0.25, 'O2' : 0.25} ,
    'Pz'  : {'O1': 0.2, 'O2': 0.2, 'P3' : 0.2, 'P4' : 0.2, 'Cz' : 0.2} ,
    
    'O1' : {'O2': 1/3, 'P3' : 1/3, 'P7' : 1/3} ,
    'O2' : {'O1': 1/3, 'P4' : 1/3, 'P8' : 1/3} ,
    },
    
    }
    return keydict


#%% OPO에 사용되는 keydict - preset_OPO
def OPO32() :
    keydict = {
    # 초기 설정. ch_type은 꼭 확인하는게 좋습니다.
    
    # TimeStamp, Battery등 다양한 채널을 raw클래스가 가지고 있는데, 
    # 이를 빼고 여기서 지정한 채널들만 지정한이름으로 데려가줍니다.
    # 이게 level6라는 ch_type을 가지고 있어야만 실행됩니다.

    # level6의 경우 T4, T3, T5, T6 채널이 있고, 이는 mne의 1020montage랑 다릅니다.
    # 따라서 이 keydict preference 에서 'T4':'P8', 이런식으로 수정합니다.
     
    # 다른 채널타입으로 녹음했다면, 
    # HandyEEGSupport.py에 있는 ch_check 함수를 사용해서 확인하고, 
    # ch_type을 수정하세요.
    
    'ch_type' : {                 
                 'Fp1':'Fp1',
                 'Fp2':'Fp2',
                 
                 'F7':'F7',
                 'F3':'F3',
                 'Fz':'Fz',
                 'F4':'F4',
                 'F8':'F8',
                 
                 'FT9':'FT9',
                 'FC5':'FC5',
                 'FC1':'FC1',
                 'FC2':'FC2',
                 'FC6':'FC6',
                 'FT10':'FT10',
                 
                 'T7':'T7',
                 'C3':'C3',
                 'Cz':'Cz',
                 'C4':'C4',
                 'T8':'T8',
                 
                 'CP5':'CP5',
                 'CP1':'CP1',
                 'CP2':'CP2',
                 'CP6':'CP6',
                 
                 'P7':'P7',
                 'P3':'P3',
                 'Pz':'Pz',
                 'P4':'P4',
                 'P8':'P8',
                 
                 'PO9':'PO9',
                 'O1':'O1',
                 'Oz':'Oz',
                 'O2':'O2',
                 'PO10':'PO10',
                 },
    
    # sample frequency. 틀리면 값이 전부 달라집니다~
    'sfreq' : 128,
    
    # 채널리스트와 예시 채널 하나입니다.
    # 32채널을 사용할 경우 초기값을 강하게 추천합니다.
    # 채널이름이 다를 경우(실험설정을 바꾼 경우), 
    # ch_types에서 설명한 방법대로 리네임 해야 합니다.
    # 예시 채널은 채널리스트 중 아무거나 하면 됩니다.
    'sample_ch' : 'Fp1',
    'ch_list' : [       'Fp1','Fp2',
                 'F7','F3','Fz','F4','F8',
            'FT9','FC5','FC1','FC2','FC6','FT10',
                 'T7','C3','Cz','C4','T8',
                  'CP5','CP1','CP2','CP6',
                 'P7','P3','Pz','P4','P8',
                'PO9','O1','Oz','O2','PO10'],
    
    # 뇌파 전극 필터링 채널 리스트입니다.
    # 레퍼런스 채널을 지정해주고, 어떤걸 어디에서 빼줄지 결정합니다.
    # 19채널을 사용할 경우 초기값을 강하게 추천합니다.
    # 안하는 경우 'N', 하는경우 'Y'
    'ref_index' : False,
    # 'ref_index' : 'Y',
    'left_ref' : 'A1',
    'right_ref' : 'A2', 
    'left_ch_list' : [     'Fp1',
                       'F7','F3',
               'FT9','FC5','FC1',
                       'T7','C3',
                     'CP5','CP1',
                       'P7','P3',
                      'PO9','O1'],
    
    'right_ch_list' : ['Fp2',
                        'F4','F8',
                        'FC2','FC6','FT10',
                        'C4','T8',
                        'CP2','CP6',
                        'P4','P8',
                        'O2','PO10'],
    
    # 절대값으로 볼지, 상대값으로 볼지 결정합니다. 
    # 'abs', 'rel'두가지 키워드만 인식합니다.
    # 다른걸 집어넣으면 아마 오류가 날겁니다.
    # 'abs_rel_type' : 'abs',
    'abs_rel_type' : 'rel',

    # topograph를 그릴때 몇열 몇행으로 그릴지, band range는 어떻게 지정할지 정합니다.
    # 주의해야할 점은, band range가 10개인데 ncols*nrows가 8이라면 에러가 납니다.
    # band는 겹쳐도 상관 없습니다. (8,12) (10,15)가 가능하다는 의미입니다.
    'ncols' : 5,
    'nrows' : 9,    
    # 4,2 -> 5,1
    'whole_range' : (1,50),
    'band_range_list' : [(1,4),(4,8),(8,12),(12,30),(30,50)],
    # 'band_range_list' : [(1,4),(4,8),(8,10),(10,12),
    #                       (12,15),(15,20),(20,30),(30,45)],


    # 'band_range_list' : [(8, 12),(12, 16)],
    # #표시할 band_range_list 입니다. 보통은 band_range_list와 같겠지만, ratio가 들어간 경우 수정 될 수 있습니다.
    # 'result_band_range_list' : [(8,12),(12,16),'ABR'],
    
    # cmap은 topograph의 color map 형태를 지정하는 곳입니다.
    # https://matplotlib.org/stable/tutorials/colors/colormaps.html
    # 여기에 있는 모든 색깔 풀을 지원합니다.
    'cmap' : 'rainbow',
     
    # 노이즈라고 인식할 수준을 정합니다. 
    # 0.000001이 1마이크로 볼트니까, 0.000500면 500마이크로 볼트입니다.
    # 0.000500수준이 적당하다고 생각합니다.
    'baseline' : 0.000500,
    
    # fft하기 위해 잘라내는 epoch(조각)의 크기를 정합니다.
    # 무 조 건 ! 2^n으로 정해야합니다. FFT의 공식에 의한 이유입니다.
    # 128개가 뇌파에 가장 적합합니다
    'epoch_sample' : 128,
    
    # 눈깜빡임을 잡아냈다면, 전후로 얼마나 잘라낼지 정합니다. 초기값은 128입니다.
    # 대충 0.5초 정도 앞뒤로 잘라낼 생각이라면, 이정도가 적당합니다. 
    # 꼭 2^n으로 안해도 되지만... 이포크랑 비례하게 하는게 좋지 않을까? 
    # 하는 마음으로 그렇게 했습니다. 150등 도 괜찮습니다. 
    # 크면 많이 잘라내서 노이즈가 덜들어가겠지만, 이포크의 개수가 현저히 줄어들 수 있습니다.
    'waste_sample' : 64,
    
    # 이포크를 오버랩 할 퍼센트를 결정합니다. 초기값은 50%(0.5)입니다.
    # 이론에 의하면 가장 적절한 것은 66%라고 하지만,
    # 장기간의 유사한 경험을 하는 경우 오버랩을 덜 하는게 낫다고 하더군요.
    # 페이퍼를 확인한 것은 아니기에, 원하시면 수정해도 좋습니다.
    # 어차피 샘플수 단위로 반올림 하기 때문에 어떤 소수를 넣어도 괜찮습니다.
    'overlap_percentage' : 0.5,

    # CAR(Common Average Reference)필터에 사용될 몽타주입니다.
    'filter_montage' : {

            'Fp1': {'Fp2': 0.25, 'F7': 0.25, 'F3': 0.25, 'Fz': 0.25},
            'Fp2': {'Fp1': 0.25, 'F8': 0.25, 'F4': 0.25, 'Fz': 0.25},
            
            'F7': {'Fp1': 0.25, 'F3': 0.25, 'FC5': 0.25, 'FT9': 0.25},
            'F3': {'Fp1': 0.2, 'Fp1': 0.2, 'Fp1': 0.2, 'Fp1': 0.2, 'Fp1': 0.2},
            'Fz': {'Fz': 1},
            'F4': {'F4': 1},
            'F8': {'Fp2': 0.25, 'F4': 0.25, 'FC6': 0.25, 'FT10': 0.25},
            
            'FT9': {'FT9': 1},
            'FC5': {'FC5': 1},
            'FC1': {'FC1': 1},
            'FC2': {'FC2': 1},
            'FC6': {'FC6': 1},
            'FT10': {'FT10': 1},
            
            'T7': {'T7': 1},
            'C3': {'C3': 1},
            'Cz': {'Cz': 1},
            'C4': {'C4': 1},
            'T8': {'T8': 1},
            
            'CP5': {'CP5': 1},
            'CP1': {'CP1': 1},
            'CP2': {'CP2': 1},
            'CP6': {'CP6': 1},
            
            'P7': {'P7': 1},
            'P3': {'P3': 1},
            'Pz': {'Pz': 1},
            'P4': {'P4': 1},
            'P8': {'P8': 1},
            
            'PO9': {'PO9': 1},
            'O1': {'O1': 1},
            'Oz': {'Oz': 1},
            'O2': {'O2': 1},
            'PO10': {'PO10': 1},
        
            
            },
            }
    return keydict